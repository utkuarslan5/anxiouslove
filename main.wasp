app anxiouslove {
  wasp: {
    version: "^0.13.0"
  },
  title: "Anxious Love",
  head: [
    "<link rel=\"icon\" href=\"/favicon.ico\" type=\"image/x-icon\" />",
    "<script async src=\"https://js.stripe.com/v3/buy-button.js\"></script>",
    "<script defer data-domain=\"demo.anxiouslove.me\" src=\"https://plausible.io/js/script.js\"></script>",
    "<script async src=\"https://tally.so/widgets/embed.js\"></script>"
  ],
  client: {
    rootComponent: import { Layout } from "@src/Layout.jsx",
  },
  db: {
    system: PostgreSQL,
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}, // This is a very naive implementation, use 'email' in production instead
      //google: {}, // https://wasp-lang.dev/docs/integrations/google
      //gitHub: {}, // https://wasp-lang.dev/docs/integrations/github
      //email: {} // https://wasp-lang.dev/docs/guides/email-auth
    },
    onAuthFailedRedirectTo: "/",
  }
}

// Use Prisma Schema Language (PSL) to define our entities: https://www.prisma.io/docs/concepts/components/prisma-schema
// Run `wasp db migrate-dev` in the CLI to create the database tables
// Then run `wasp db studio` to open Prisma Studio and view your db models
entity User {=psl
  id          Int     @id @default(autoincrement())
  tasks       Task[]
psl=}

entity Task {=psl
  id          Int     @id @default(autoincrement())
  description String
  isDone      Boolean @default(false)
  user        User   @relation(fields: [userId], references: [id])
  userId      Int
psl=}

route RootRoute { path: "/", to: MainPage }
page MainPage {
  authRequired: false,
  component: import { MainPage } from "@src/MainPage"
}

route PlotRoute { path: "/plot", to: PlotPage }
page PlotPage {
  authRequired: false,
  component: import { EmotionPlot } from "@src/components/EmotionPlot"
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import { LoginPage } from "@src/auth/LoginPage"
}

route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import { SignupPage } from "@src/auth/SignupPage"
}


query getPosthogConfig {
  fn: import { getPosthogConfig } from "@src/tasks/queries",
}

query getHumeConfig {
  fn: import { getHumeConfig } from "@src/tasks/queries",
}


action sendEmailWithImage {
  fn: import { sendEmailWithImage } from "@src/tasks/actions",
}
